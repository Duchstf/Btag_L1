// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module btag_nn_sigmoid_ap_fixed_16_6_0_0_0_ap_fixed_16_6_0_0_0_sigmoid_config17_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        p_read,
        layer17_out,
        layer17_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [13:0] p_read;
output  [15:0] layer17_out;
output   layer17_out_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[15:0] layer17_out;
reg layer17_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
reg    ap_done_reg;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_subdone;
wire   [9:0] sigmoid_table_address0;
reg    sigmoid_table_ce0;
wire   [9:0] sigmoid_table_q0;
wire  signed [10:0] sext_ln1002_fu_90_p1;
reg  signed [10:0] sext_ln1002_reg_171;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] p_Result_s_fu_94_p2;
reg   [0:0] p_Result_s_reg_177;
wire   [0:0] icmp_ln1003_fu_112_p2;
reg   [0:0] icmp_ln1003_reg_182;
wire   [10:0] ret_V_fu_118_p2;
reg   [10:0] ret_V_reg_187;
wire   [63:0] zext_ln121_fu_161_p1;
wire    ap_block_pp0_stage0;
wire   [15:0] zext_ln121_1_fu_166_p1;
reg   [15:0] layer17_out_preg;
reg    ap_block_pp0_stage0_01001;
wire   [9:0] tmp_1_fu_80_p4;
wire   [23:0] tmp_2_fu_72_p3;
wire   [3:0] trunc_ln1003_fu_100_p1;
wire   [9:0] tmp_fu_104_p3;
wire   [10:0] select_ln1002_fu_124_p3;
wire   [10:0] ret_V_2_fu_129_p3;
wire   [10:0] index_fu_135_p2;
wire   [0:0] tmp_3_fu_145_p3;
wire   [9:0] trunc_ln113_fu_141_p1;
wire   [9:0] index_1_fu_153_p3;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to1;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_done_reg = 1'b0;
#0 layer17_out_preg = 16'd0;
end

btag_nn_sigmoid_ap_fixed_16_6_0_0_0_ap_fixed_16_6_0_0_0_sigmoid_config17_s_sigmoid_tabkb #(
    .DataWidth( 10 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
sigmoid_table_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(sigmoid_table_address0),
    .ce0(sigmoid_table_ce0),
    .q0(sigmoid_table_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                layer17_out_preg[0] <= 1'b0;
        layer17_out_preg[1] <= 1'b0;
        layer17_out_preg[2] <= 1'b0;
        layer17_out_preg[3] <= 1'b0;
        layer17_out_preg[4] <= 1'b0;
        layer17_out_preg[5] <= 1'b0;
        layer17_out_preg[6] <= 1'b0;
        layer17_out_preg[7] <= 1'b0;
        layer17_out_preg[8] <= 1'b0;
        layer17_out_preg[9] <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
                        layer17_out_preg[9 : 0] <= zext_ln121_1_fu_166_p1[9 : 0];
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln1003_reg_182 <= icmp_ln1003_fu_112_p2;
        p_Result_s_reg_177 <= p_Result_s_fu_94_p2;
        ret_V_reg_187 <= ret_V_fu_118_p2;
        sext_ln1002_reg_171 <= sext_ln1002_fu_90_p1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to1 = 1'b1;
    end else begin
        ap_idle_pp0_0to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to1 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        layer17_out = zext_ln121_1_fu_166_p1;
    end else begin
        layer17_out = layer17_out_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        layer17_out_ap_vld = 1'b1;
    end else begin
        layer17_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sigmoid_table_ce0 = 1'b1;
    end else begin
        sigmoid_table_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((ap_done_reg == 1'b1) & (ap_start == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_done_reg == 1'b1) & (ap_start == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_done_reg == 1'b1) & (ap_start == 1'b1)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_done_reg == 1'b1);
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign icmp_ln1003_fu_112_p2 = ((tmp_fu_104_p3 == 10'd0) ? 1'b1 : 1'b0);

assign index_1_fu_153_p3 = ((tmp_3_fu_145_p3[0:0] == 1'b1) ? 10'd1023 : trunc_ln113_fu_141_p1);

assign index_fu_135_p2 = (ret_V_2_fu_129_p3 + 11'd512);

assign p_Result_s_fu_94_p2 = (($signed(tmp_2_fu_72_p3) < $signed(24'd16777201)) ? 1'b1 : 1'b0);

assign ret_V_2_fu_129_p3 = ((p_Result_s_reg_177[0:0] == 1'b1) ? select_ln1002_fu_124_p3 : sext_ln1002_reg_171);

assign ret_V_fu_118_p2 = ($signed(sext_ln1002_fu_90_p1) + $signed(11'd1));

assign select_ln1002_fu_124_p3 = ((icmp_ln1003_reg_182[0:0] == 1'b1) ? sext_ln1002_reg_171 : ret_V_reg_187);

assign sext_ln1002_fu_90_p1 = $signed(tmp_1_fu_80_p4);

assign sigmoid_table_address0 = zext_ln121_fu_161_p1;

assign tmp_1_fu_80_p4 = {{p_read[13:4]}};

assign tmp_2_fu_72_p3 = {{p_read}, {10'd0}};

assign tmp_3_fu_145_p3 = index_fu_135_p2[32'd10];

assign tmp_fu_104_p3 = {{trunc_ln1003_fu_100_p1}, {6'd0}};

assign trunc_ln1003_fu_100_p1 = p_read[3:0];

assign trunc_ln113_fu_141_p1 = index_fu_135_p2[9:0];

assign zext_ln121_1_fu_166_p1 = sigmoid_table_q0;

assign zext_ln121_fu_161_p1 = index_1_fu_153_p3;

always @ (posedge ap_clk) begin
    layer17_out_preg[15:10] <= 6'b000000;
end

endmodule //btag_nn_sigmoid_ap_fixed_16_6_0_0_0_ap_fixed_16_6_0_0_0_sigmoid_config17_s
