-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity btag_nn_dense_latency_ap_ufixed_9_0_0_0_0_ap_fixed_16_6_5_3_0_config12_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_read : IN STD_LOGIC_VECTOR (8 downto 0);
    p_read2 : IN STD_LOGIC_VECTOR (8 downto 0);
    p_read3 : IN STD_LOGIC_VECTOR (8 downto 0);
    p_read4 : IN STD_LOGIC_VECTOR (8 downto 0);
    p_read5 : IN STD_LOGIC_VECTOR (8 downto 0);
    p_read6 : IN STD_LOGIC_VECTOR (8 downto 0);
    p_read8 : IN STD_LOGIC_VECTOR (8 downto 0);
    p_read9 : IN STD_LOGIC_VECTOR (8 downto 0);
    p_read10 : IN STD_LOGIC_VECTOR (8 downto 0);
    p_read13 : IN STD_LOGIC_VECTOR (8 downto 0);
    p_read14 : IN STD_LOGIC_VECTOR (8 downto 0);
    p_read15 : IN STD_LOGIC_VECTOR (8 downto 0);
    p_read16 : IN STD_LOGIC_VECTOR (8 downto 0);
    p_read17 : IN STD_LOGIC_VECTOR (8 downto 0);
    p_read18 : IN STD_LOGIC_VECTOR (8 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of btag_nn_dense_latency_ap_ufixed_9_0_0_0_0_ap_fixed_16_6_5_3_0_config12_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv15_7FE6 : STD_LOGIC_VECTOR (14 downto 0) := "111111111100110";
    constant ap_const_lv15_7FE9 : STD_LOGIC_VECTOR (14 downto 0) := "111111111101001";
    constant ap_const_lv16_FFDB : STD_LOGIC_VECTOR (15 downto 0) := "1111111111011011";
    constant ap_const_lv16_FFC7 : STD_LOGIC_VECTOR (15 downto 0) := "1111111111000111";
    constant ap_const_lv14_16 : STD_LOGIC_VECTOR (13 downto 0) := "00000000010110";
    constant ap_const_lv15_23 : STD_LOGIC_VECTOR (14 downto 0) := "000000000100011";
    constant ap_const_lv16_FFCC : STD_LOGIC_VECTOR (15 downto 0) := "1111111111001100";
    constant ap_const_lv15_37 : STD_LOGIC_VECTOR (14 downto 0) := "000000000110111";
    constant ap_const_lv15_27 : STD_LOGIC_VECTOR (14 downto 0) := "000000000100111";
    constant ap_const_lv15_3D : STD_LOGIC_VECTOR (14 downto 0) := "000000000111101";
    constant ap_const_lv14_19 : STD_LOGIC_VECTOR (13 downto 0) := "00000000011001";
    constant ap_const_lv14_1A : STD_LOGIC_VECTOR (13 downto 0) := "00000000011010";
    constant ap_const_lv15_7FEA : STD_LOGIC_VECTOR (14 downto 0) := "111111111101010";
    constant ap_const_lv16_FFD5 : STD_LOGIC_VECTOR (15 downto 0) := "1111111111010101";
    constant ap_const_lv17_1FF9A : STD_LOGIC_VECTOR (16 downto 0) := "11111111110011010";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv9_70 : STD_LOGIC_VECTOR (8 downto 0) := "001110000";
    constant ap_const_lv10_A0 : STD_LOGIC_VECTOR (9 downto 0) := "0010100000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal p_read_710_reg_5125 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal p_read_710_reg_5125_pp0_iter1_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal p_read_711_reg_5130 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_read1623_reg_5135 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_read1522_reg_5142 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_read1522_reg_5142_pp0_iter1_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal p_read1421_reg_5149 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_read1320_reg_5154 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_read1019_reg_5159 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_read918_reg_5166 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_read817_reg_5171 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_read616_reg_5178 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_read515_reg_5183 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_read515_reg_5183_pp0_iter1_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal p_read414_reg_5190 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_read313_reg_5195 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_read212_reg_5200 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_read11_reg_5205 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln818_s_reg_5211 : STD_LOGIC_VECTOR (10 downto 0);
    signal lshr_ln818_667_cast_cast_reg_5216 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln818_346_reg_5221 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln818_347_reg_5226 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln818_348_reg_5231 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln818_353_reg_5236 : STD_LOGIC_VECTOR (9 downto 0);
    signal lshr_ln818_705_cast_reg_5241 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln813_fu_4781_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln813_reg_5246 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln813_666_fu_4787_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln813_666_reg_5251 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln813_670_fu_4793_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln813_670_reg_5256 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln813_673_fu_4799_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln813_673_reg_5261 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln813_676_fu_4805_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln813_676_reg_5266 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln813_679_fu_4821_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln813_679_reg_5271 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln813_683_fu_4827_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln813_683_reg_5276 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_305_fu_216_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln818_365_fu_4511_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal r_V_305_fu_216_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal r_V_310_fu_217_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1273_347_fu_4657_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal r_V_310_fu_217_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_314_fu_218_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_314_fu_218_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_311_fu_220_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_311_fu_220_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln818_190_fu_225_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln818_190_fu_225_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln818_194_fu_229_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln818_194_fu_229_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_307_fu_236_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_307_fu_236_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln818_192_fu_246_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln818_192_fu_246_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln818_193_fu_253_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln818_193_fu_253_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln818_191_fu_255_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln818_191_fu_255_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln818_fu_263_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln818_fu_263_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln818_189_fu_266_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln818_189_fu_266_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_309_fu_267_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_309_fu_267_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_fu_275_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_fu_275_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_V_312_fu_279_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_312_fu_279_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln818_fu_263_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal lshr_ln818_cast_cast_fu_4419_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln818_189_fu_266_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal lshr_ln818_652_cast_cast_fu_4437_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln818_190_fu_225_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_fu_275_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln818_191_fu_255_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal lshr_ln818_664_cast_cast_fu_4483_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln818_192_fu_246_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal shl_ln818_s_fu_4515_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln818_366_fu_4522_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sub_ln818_fu_4526_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal r_V_305_fu_216_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal shl_ln1273_178_fu_4552_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln1273_342_fu_4559_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal r_V_306_fu_4563_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal r_V_307_fu_236_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln818_349_fu_4583_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln1273_179_fu_4601_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal shl_ln1273_180_fu_4612_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln1273_346_fu_4619_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln1273_345_fu_4608_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal r_V_308_fu_4623_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln818_350_fu_4629_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_309_fu_267_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln818_351_fu_4643_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_310_fu_217_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln818_352_fu_4662_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln818_193_fu_253_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal r_V_311_fu_220_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln818_354_fu_4690_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal r_V_312_fu_279_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln818_355_fu_4708_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln1273_181_fu_4725_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal shl_ln1273_182_fu_4736_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln1273_353_fu_4743_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln1273_352_fu_4732_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal r_V_313_fu_4747_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln818_356_fu_4753_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln818_194_fu_229_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln1273_20_fu_4455_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln818_107_fu_4672_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln1273_351_fu_4722_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal lshr_ln818_652_cast_cast_cast_fu_4447_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal lshr_ln818_cast_cast_cast_fu_4429_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln818_108_fu_4700_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1273_110_fu_4639_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1273_111_fu_4718_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln1273_112_fu_4763_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln818_fu_4412_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln813_678_fu_4811_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln813_50_fu_4817_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal lshr_ln818_664_cast_cast_cast_fu_4493_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln70_115_fu_4593_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln70_116_fu_4653_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln1273_s_fu_4836_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal shl_ln1273_177_fu_4847_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln1273_340_fu_4854_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln1273_339_fu_4843_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_304_fu_4858_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln818_345_fu_4864_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1273_108_fu_4881_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln818_209_fu_4904_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln818_208_fu_4897_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln818_368_fu_4911_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sub_ln818_67_fu_4915_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1273_s_fu_4921_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal r_V_314_fu_218_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln818_357_fu_4942_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1273_fu_4833_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln813_fu_4956_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln813_664_fu_4959_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln813_324_fu_4965_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln818_fu_4874_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln813_665_fu_4969_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln813_326_fu_4979_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln1273_341_fu_4884_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln813_667_fu_4982_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln813_327_fu_4988_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln813_325_fu_4975_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln1273_349_fu_4931_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln813_668_fu_4992_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln813_669_fu_4998_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln813_138_fu_5008_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1273_109_fu_4888_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln818_367_fu_4894_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln813_671_fu_5011_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln813_672_fu_5017_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln813_330_fu_5027_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln813_329_fu_5023_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln813_674_fu_5030_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal lshr_ln818_705_cast40_cast_fu_4935_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln813_675_fu_5036_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln813_332_fu_5046_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln813_331_fu_5042_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln813_677_fu_5049_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln813_51_fu_5059_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal lshr_ln818_667_cast_cast_cast_fu_4878_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln813_680_fu_5062_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln813_139_fu_5068_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln70_fu_4891_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln813_681_fu_5072_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln813_682_fu_5078_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln813_335_fu_5088_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln813_334_fu_5084_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln813_684_fu_5091_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln813_fu_4952_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln813_685_fu_5097_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln813_328_fu_5004_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln813_333_fu_5055_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln68_fu_5103_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_return_0_preg : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal ap_return_1_preg : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal ap_return_2_preg : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to1 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal mul_ln818_189_fu_266_p00 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln818_190_fu_225_p00 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln818_191_fu_255_p00 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln818_192_fu_246_p00 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln818_194_fu_229_p00 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln818_fu_263_p00 : STD_LOGIC_VECTOR (13 downto 0);
    signal r_V_307_fu_236_p00 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_309_fu_267_p00 : STD_LOGIC_VECTOR (14 downto 0);
    signal r_V_311_fu_220_p00 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_312_fu_279_p00 : STD_LOGIC_VECTOR (16 downto 0);
    signal r_V_314_fu_218_p00 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_fu_275_p00 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component btag_nn_mul_9ns_6s_15_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (8 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        dout : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component btag_nn_mul_9ns_7s_16_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (8 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component btag_nn_mul_9ns_6ns_14_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (8 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        dout : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component btag_nn_mul_9ns_7ns_15_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (8 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        dout : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component btag_nn_mul_9ns_8s_17_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (8 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (16 downto 0) );
    end component;



begin
    mul_9ns_6s_15_1_1_U1842 : component btag_nn_mul_9ns_6s_15_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 6,
        dout_WIDTH => 15)
    port map (
        din0 => r_V_305_fu_216_p0,
        din1 => r_V_305_fu_216_p1,
        dout => r_V_305_fu_216_p2);

    mul_9ns_6s_15_1_1_U1843 : component btag_nn_mul_9ns_6s_15_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 6,
        dout_WIDTH => 15)
    port map (
        din0 => r_V_310_fu_217_p0,
        din1 => r_V_310_fu_217_p1,
        dout => r_V_310_fu_217_p2);

    mul_9ns_7s_16_1_1_U1844 : component btag_nn_mul_9ns_7s_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 7,
        dout_WIDTH => 16)
    port map (
        din0 => r_V_314_fu_218_p0,
        din1 => r_V_314_fu_218_p1,
        dout => r_V_314_fu_218_p2);

    mul_9ns_7s_16_1_1_U1845 : component btag_nn_mul_9ns_7s_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 7,
        dout_WIDTH => 16)
    port map (
        din0 => r_V_311_fu_220_p0,
        din1 => r_V_311_fu_220_p1,
        dout => r_V_311_fu_220_p2);

    mul_9ns_6ns_14_1_1_U1846 : component btag_nn_mul_9ns_6ns_14_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 6,
        dout_WIDTH => 14)
    port map (
        din0 => mul_ln818_190_fu_225_p0,
        din1 => mul_ln818_190_fu_225_p1,
        dout => mul_ln818_190_fu_225_p2);

    mul_9ns_7ns_15_1_1_U1847 : component btag_nn_mul_9ns_7ns_15_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 7,
        dout_WIDTH => 15)
    port map (
        din0 => mul_ln818_194_fu_229_p0,
        din1 => mul_ln818_194_fu_229_p1,
        dout => mul_ln818_194_fu_229_p2);

    mul_9ns_7s_16_1_1_U1848 : component btag_nn_mul_9ns_7s_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 7,
        dout_WIDTH => 16)
    port map (
        din0 => r_V_307_fu_236_p0,
        din1 => r_V_307_fu_236_p1,
        dout => r_V_307_fu_236_p2);

    mul_9ns_7ns_15_1_1_U1849 : component btag_nn_mul_9ns_7ns_15_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 7,
        dout_WIDTH => 15)
    port map (
        din0 => mul_ln818_192_fu_246_p0,
        din1 => mul_ln818_192_fu_246_p1,
        dout => mul_ln818_192_fu_246_p2);

    mul_9ns_7ns_15_1_1_U1850 : component btag_nn_mul_9ns_7ns_15_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 7,
        dout_WIDTH => 15)
    port map (
        din0 => mul_ln818_193_fu_253_p0,
        din1 => mul_ln818_193_fu_253_p1,
        dout => mul_ln818_193_fu_253_p2);

    mul_9ns_7ns_15_1_1_U1851 : component btag_nn_mul_9ns_7ns_15_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 7,
        dout_WIDTH => 15)
    port map (
        din0 => mul_ln818_191_fu_255_p0,
        din1 => mul_ln818_191_fu_255_p1,
        dout => mul_ln818_191_fu_255_p2);

    mul_9ns_6ns_14_1_1_U1852 : component btag_nn_mul_9ns_6ns_14_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 6,
        dout_WIDTH => 14)
    port map (
        din0 => mul_ln818_fu_263_p0,
        din1 => mul_ln818_fu_263_p1,
        dout => mul_ln818_fu_263_p2);

    mul_9ns_6ns_14_1_1_U1853 : component btag_nn_mul_9ns_6ns_14_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 6,
        dout_WIDTH => 14)
    port map (
        din0 => mul_ln818_189_fu_266_p0,
        din1 => mul_ln818_189_fu_266_p1,
        dout => mul_ln818_189_fu_266_p2);

    mul_9ns_6s_15_1_1_U1854 : component btag_nn_mul_9ns_6s_15_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 6,
        dout_WIDTH => 15)
    port map (
        din0 => r_V_309_fu_267_p0,
        din1 => r_V_309_fu_267_p1,
        dout => r_V_309_fu_267_p2);

    mul_9ns_7s_16_1_1_U1855 : component btag_nn_mul_9ns_7s_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 7,
        dout_WIDTH => 16)
    port map (
        din0 => r_V_fu_275_p0,
        din1 => r_V_fu_275_p1,
        dout => r_V_fu_275_p2);

    mul_9ns_8s_17_1_1_U1856 : component btag_nn_mul_9ns_8s_17_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 8,
        dout_WIDTH => 17)
    port map (
        din0 => r_V_312_fu_279_p0,
        din1 => r_V_312_fu_279_p1,
        dout => r_V_312_fu_279_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_return_0_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_0_preg <= ap_const_lv16_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then 
                    ap_return_0_preg <= sext_ln813_328_fu_5004_p1;
                end if; 
            end if;
        end if;
    end process;


    ap_return_1_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_1_preg <= ap_const_lv16_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then 
                    ap_return_1_preg <= sext_ln813_333_fu_5055_p1;
                end if; 
            end if;
        end if;
    end process;


    ap_return_2_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_2_preg <= ap_const_lv16_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then 
                    ap_return_2_preg <= sext_ln68_fu_5103_p1;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                add_ln813_666_reg_5251 <= add_ln813_666_fu_4787_p2;
                add_ln813_670_reg_5256 <= add_ln813_670_fu_4793_p2;
                add_ln813_673_reg_5261 <= add_ln813_673_fu_4799_p2;
                add_ln813_676_reg_5266 <= add_ln813_676_fu_4805_p2;
                add_ln813_679_reg_5271 <= add_ln813_679_fu_4821_p2;
                add_ln813_683_reg_5276 <= add_ln813_683_fu_4827_p2;
                add_ln813_reg_5246 <= add_ln813_fu_4781_p2;
                lshr_ln818_667_cast_cast_reg_5216 <= mul_ln818_192_fu_246_p2(14 downto 5);
                lshr_ln818_705_cast_reg_5241 <= mul_ln818_194_fu_229_p2(14 downto 5);
                p_read1019_reg_5159 <= p_read10;
                p_read11_reg_5205 <= p_read;
                p_read1320_reg_5154 <= p_read13;
                p_read1421_reg_5149 <= p_read14;
                p_read1522_reg_5142 <= p_read15;
                p_read1522_reg_5142_pp0_iter1_reg <= p_read1522_reg_5142;
                p_read1623_reg_5135 <= p_read16;
                p_read212_reg_5200 <= p_read2;
                p_read313_reg_5195 <= p_read3;
                p_read414_reg_5190 <= p_read4;
                p_read515_reg_5183 <= p_read5;
                p_read515_reg_5183_pp0_iter1_reg <= p_read515_reg_5183;
                p_read616_reg_5178 <= p_read6;
                p_read817_reg_5171 <= p_read8;
                p_read918_reg_5166 <= p_read9;
                p_read_710_reg_5125 <= p_read18;
                p_read_710_reg_5125_pp0_iter1_reg <= p_read_710_reg_5125;
                p_read_711_reg_5130 <= p_read17;
                trunc_ln818_346_reg_5221 <= sub_ln818_fu_4526_p2(14 downto 5);
                trunc_ln818_347_reg_5226 <= r_V_305_fu_216_p2(14 downto 5);
                trunc_ln818_348_reg_5231 <= r_V_306_fu_4563_p2(14 downto 5);
                trunc_ln818_353_reg_5236 <= mul_ln818_193_fu_253_p2(14 downto 5);
                trunc_ln818_s_reg_5211 <= r_V_fu_275_p2(15 downto 5);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln813_664_fu_4959_p2 <= std_logic_vector(signed(sext_ln1273_fu_4833_p1) + signed(zext_ln813_fu_4956_p1));
    add_ln813_665_fu_4969_p2 <= std_logic_vector(signed(sext_ln813_324_fu_4965_p1) + signed(sext_ln818_fu_4874_p1));
    add_ln813_666_fu_4787_p2 <= std_logic_vector(signed(sext_ln818_107_fu_4672_p1) + signed(zext_ln1273_351_fu_4722_p1));
    add_ln813_667_fu_4982_p2 <= std_logic_vector(signed(sext_ln813_326_fu_4979_p1) + signed(zext_ln1273_341_fu_4884_p1));
    add_ln813_668_fu_4992_p2 <= std_logic_vector(signed(sext_ln813_327_fu_4988_p1) + signed(sext_ln813_325_fu_4975_p1));
    add_ln813_669_fu_4998_p2 <= std_logic_vector(unsigned(zext_ln1273_349_fu_4931_p1) + unsigned(add_ln813_668_fu_4992_p2));
    add_ln813_670_fu_4793_p2 <= std_logic_vector(unsigned(lshr_ln818_652_cast_cast_cast_fu_4447_p1) + unsigned(lshr_ln818_cast_cast_cast_fu_4429_p1));
    add_ln813_671_fu_5011_p2 <= std_logic_vector(unsigned(zext_ln813_138_fu_5008_p1) + unsigned(sext_ln1273_109_fu_4888_p1));
    add_ln813_672_fu_5017_p2 <= std_logic_vector(unsigned(zext_ln818_367_fu_4894_p1) + unsigned(add_ln813_671_fu_5011_p2));
    add_ln813_673_fu_4799_p2 <= std_logic_vector(signed(sext_ln818_108_fu_4700_p1) + signed(sext_ln1273_110_fu_4639_p1));
    add_ln813_674_fu_5030_p2 <= std_logic_vector(signed(sext_ln813_330_fu_5027_p1) + signed(sext_ln813_329_fu_5023_p1));
    add_ln813_675_fu_5036_p2 <= std_logic_vector(unsigned(add_ln813_674_fu_5030_p2) + unsigned(lshr_ln818_705_cast40_cast_fu_4935_p1));
    add_ln813_676_fu_4805_p2 <= std_logic_vector(signed(sext_ln1273_111_fu_4718_p1) + signed(sext_ln1273_112_fu_4763_p1));
    add_ln813_677_fu_5049_p2 <= std_logic_vector(signed(sext_ln813_332_fu_5046_p1) + signed(sext_ln813_331_fu_5042_p1));
    add_ln813_678_fu_4811_p2 <= std_logic_vector(unsigned(zext_ln818_fu_4412_p1) + unsigned(ap_const_lv10_A0));
    add_ln813_679_fu_4821_p2 <= std_logic_vector(unsigned(zext_ln813_50_fu_4817_p1) + unsigned(lshr_ln818_664_cast_cast_cast_fu_4493_p1));
    add_ln813_680_fu_5062_p2 <= std_logic_vector(unsigned(zext_ln813_51_fu_5059_p1) + unsigned(lshr_ln818_667_cast_cast_cast_fu_4878_p1));
    add_ln813_681_fu_5072_p2 <= std_logic_vector(unsigned(zext_ln813_139_fu_5068_p1) + unsigned(sext_ln70_fu_4891_p1));
    add_ln813_682_fu_5078_p2 <= std_logic_vector(unsigned(lshr_ln818_705_cast40_cast_fu_4935_p1) + unsigned(add_ln813_681_fu_5072_p2));
    add_ln813_683_fu_4827_p2 <= std_logic_vector(signed(sext_ln70_115_fu_4593_p1) + signed(sext_ln70_116_fu_4653_p1));
    add_ln813_684_fu_5091_p2 <= std_logic_vector(signed(sext_ln813_335_fu_5088_p1) + signed(sext_ln813_334_fu_5084_p1));
    add_ln813_685_fu_5097_p2 <= std_logic_vector(unsigned(add_ln813_684_fu_5091_p2) + unsigned(sext_ln813_fu_4952_p1));
    add_ln813_fu_4781_p2 <= std_logic_vector(unsigned(trunc_ln1273_20_fu_4455_p4) + unsigned(ap_const_lv9_70));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_done_reg = ap_const_logic_1) and (ap_start = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_done_reg = ap_const_logic_1) or ((ap_done_reg = ap_const_logic_1) and (ap_start = ap_const_logic_1)));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_done_reg)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_done_reg = ap_const_logic_1);
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_enable_reg_pp0_iter2, ap_done_reg, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to1)
    begin
        if (((ap_idle_pp0_0to1 = ap_const_logic_1) and (ap_start = ap_const_logic_0))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_return_0_assign_proc : process(ap_block_pp0_stage0_11001, sext_ln813_328_fu_5004_p1, ap_return_0_preg)
    begin
        if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then 
            ap_return_0 <= sext_ln813_328_fu_5004_p1;
        else 
            ap_return_0 <= ap_return_0_preg;
        end if; 
    end process;


    ap_return_1_assign_proc : process(ap_block_pp0_stage0_11001, sext_ln813_333_fu_5055_p1, ap_return_1_preg)
    begin
        if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then 
            ap_return_1 <= sext_ln813_333_fu_5055_p1;
        else 
            ap_return_1 <= ap_return_1_preg;
        end if; 
    end process;


    ap_return_2_assign_proc : process(ap_block_pp0_stage0_11001, sext_ln68_fu_5103_p1, ap_return_2_preg)
    begin
        if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then 
            ap_return_2 <= sext_ln68_fu_5103_p1;
        else 
            ap_return_2 <= ap_return_2_preg;
        end if; 
    end process;

    lshr_ln818_652_cast_cast_cast_fu_4447_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln818_652_cast_cast_fu_4437_p4),10));
    lshr_ln818_652_cast_cast_fu_4437_p4 <= mul_ln818_189_fu_266_p2(13 downto 5);
    lshr_ln818_664_cast_cast_cast_fu_4493_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln818_664_cast_cast_fu_4483_p4),11));
    lshr_ln818_664_cast_cast_fu_4483_p4 <= mul_ln818_191_fu_255_p2(14 downto 5);
    lshr_ln818_667_cast_cast_cast_fu_4878_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln818_667_cast_cast_reg_5216),12));
    lshr_ln818_705_cast40_cast_fu_4935_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln818_705_cast_reg_5241),13));
    lshr_ln818_cast_cast_cast_fu_4429_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln818_cast_cast_fu_4419_p4),10));
    lshr_ln818_cast_cast_fu_4419_p4 <= mul_ln818_fu_263_p2(13 downto 5);
    mul_ln818_189_fu_266_p0 <= mul_ln818_189_fu_266_p00(9 - 1 downto 0);
    mul_ln818_189_fu_266_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_read212_reg_5200),14));
    mul_ln818_189_fu_266_p1 <= ap_const_lv14_1A(6 - 1 downto 0);
    mul_ln818_190_fu_225_p0 <= mul_ln818_190_fu_225_p00(9 - 1 downto 0);
    mul_ln818_190_fu_225_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_read313_reg_5195),14));
    mul_ln818_190_fu_225_p1 <= ap_const_lv14_16(6 - 1 downto 0);
    mul_ln818_191_fu_255_p0 <= mul_ln818_191_fu_255_p00(9 - 1 downto 0);
    mul_ln818_191_fu_255_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_read515_reg_5183),15));
    mul_ln818_191_fu_255_p1 <= ap_const_lv15_3D(7 - 1 downto 0);
    mul_ln818_192_fu_246_p0 <= mul_ln818_192_fu_246_p00(9 - 1 downto 0);
    mul_ln818_192_fu_246_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_read616_reg_5178),15));
    mul_ln818_192_fu_246_p1 <= ap_const_lv15_37(7 - 1 downto 0);
    mul_ln818_193_fu_253_p0 <= zext_ln1273_347_fu_4657_p1(9 - 1 downto 0);
    mul_ln818_193_fu_253_p1 <= ap_const_lv15_27(7 - 1 downto 0);
    mul_ln818_194_fu_229_p0 <= mul_ln818_194_fu_229_p00(9 - 1 downto 0);
    mul_ln818_194_fu_229_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_read_711_reg_5130),15));
    mul_ln818_194_fu_229_p1 <= ap_const_lv15_23(7 - 1 downto 0);
    mul_ln818_fu_263_p0 <= mul_ln818_fu_263_p00(9 - 1 downto 0);
    mul_ln818_fu_263_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_read11_reg_5205),14));
    mul_ln818_fu_263_p1 <= ap_const_lv14_19(6 - 1 downto 0);
    r_V_304_fu_4858_p2 <= std_logic_vector(unsigned(zext_ln1273_340_fu_4854_p1) - unsigned(zext_ln1273_339_fu_4843_p1));
    r_V_305_fu_216_p0 <= zext_ln818_365_fu_4511_p1(9 - 1 downto 0);
    r_V_305_fu_216_p1 <= ap_const_lv15_7FE6(6 - 1 downto 0);
    r_V_306_fu_4563_p2 <= std_logic_vector(unsigned(zext_ln1273_342_fu_4559_p1) - unsigned(zext_ln818_366_fu_4522_p1));
    r_V_307_fu_236_p0 <= r_V_307_fu_236_p00(9 - 1 downto 0);
    r_V_307_fu_236_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_read918_reg_5166),16));
    r_V_307_fu_236_p1 <= ap_const_lv16_FFCC(7 - 1 downto 0);
    r_V_308_fu_4623_p2 <= std_logic_vector(unsigned(zext_ln1273_346_fu_4619_p1) - unsigned(zext_ln1273_345_fu_4608_p1));
    r_V_309_fu_267_p0 <= r_V_309_fu_267_p00(9 - 1 downto 0);
    r_V_309_fu_267_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_read1019_reg_5159),15));
    r_V_309_fu_267_p1 <= ap_const_lv15_7FEA(6 - 1 downto 0);
    r_V_310_fu_217_p0 <= zext_ln1273_347_fu_4657_p1(9 - 1 downto 0);
    r_V_310_fu_217_p1 <= ap_const_lv15_7FE9(6 - 1 downto 0);
    r_V_311_fu_220_p0 <= r_V_311_fu_220_p00(9 - 1 downto 0);
    r_V_311_fu_220_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_read1421_reg_5149),16));
    r_V_311_fu_220_p1 <= ap_const_lv16_FFC7(7 - 1 downto 0);
    r_V_312_fu_279_p0 <= r_V_312_fu_279_p00(9 - 1 downto 0);
    r_V_312_fu_279_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_read1522_reg_5142),17));
    r_V_312_fu_279_p1 <= ap_const_lv17_1FF9A(8 - 1 downto 0);
    r_V_313_fu_4747_p2 <= std_logic_vector(unsigned(zext_ln1273_353_fu_4743_p1) - unsigned(zext_ln1273_352_fu_4732_p1));
    r_V_314_fu_218_p0 <= r_V_314_fu_218_p00(9 - 1 downto 0);
    r_V_314_fu_218_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_read_710_reg_5125_pp0_iter1_reg),16));
    r_V_314_fu_218_p1 <= ap_const_lv16_FFDB(7 - 1 downto 0);
    r_V_fu_275_p0 <= r_V_fu_275_p00(9 - 1 downto 0);
    r_V_fu_275_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_read414_reg_5190),16));
    r_V_fu_275_p1 <= ap_const_lv16_FFD5(7 - 1 downto 0);
        sext_ln1273_108_fu_4881_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln818_346_reg_5221),11));

        sext_ln1273_109_fu_4888_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln818_347_reg_5226),12));

        sext_ln1273_110_fu_4639_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln818_350_fu_4629_p4),12));

        sext_ln1273_111_fu_4718_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln818_355_fu_4708_p4),13));

        sext_ln1273_112_fu_4763_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln818_356_fu_4753_p4),13));

        sext_ln1273_fu_4833_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln818_s_reg_5211),12));

        sext_ln68_fu_5103_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln813_685_fu_5097_p2),16));

        sext_ln70_115_fu_4593_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln818_349_fu_4583_p4),12));

        sext_ln70_116_fu_4653_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln818_351_fu_4643_p4),12));

        sext_ln70_fu_4891_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln818_348_reg_5231),13));

        sext_ln813_324_fu_4965_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln813_664_fu_4959_p2),13));

        sext_ln813_325_fu_4975_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln813_665_fu_4969_p2),14));

        sext_ln813_326_fu_4979_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln813_666_reg_5251),13));

        sext_ln813_327_fu_4988_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln813_667_fu_4982_p2),14));

        sext_ln813_328_fu_5004_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln813_669_fu_4998_p2),16));

        sext_ln813_329_fu_5023_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln813_672_fu_5017_p2),13));

        sext_ln813_330_fu_5027_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln813_673_reg_5261),13));

        sext_ln813_331_fu_5042_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln813_675_fu_5036_p2),14));

        sext_ln813_332_fu_5046_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln813_676_reg_5266),14));

        sext_ln813_333_fu_5055_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln813_677_fu_5049_p2),16));

        sext_ln813_334_fu_5084_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln813_682_fu_5078_p2),14));

        sext_ln813_335_fu_5088_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln813_683_reg_5276),14));

        sext_ln813_fu_4952_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln818_357_fu_4942_p4),14));

        sext_ln818_107_fu_4672_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln818_352_fu_4662_p4),11));

        sext_ln818_108_fu_4700_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln818_354_fu_4690_p4),12));

        sext_ln818_fu_4874_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln818_345_fu_4864_p4),13));

    shl_ln1273_177_fu_4847_p3 <= (p_read515_reg_5183_pp0_iter1_reg & ap_const_lv3_0);
    shl_ln1273_178_fu_4552_p3 <= (p_read817_reg_5171 & ap_const_lv2_0);
    shl_ln1273_179_fu_4601_p3 <= (p_read1019_reg_5159 & ap_const_lv5_0);
    shl_ln1273_180_fu_4612_p3 <= (p_read1019_reg_5159 & ap_const_lv1_0);
    shl_ln1273_181_fu_4725_p3 <= (p_read1623_reg_5135 & ap_const_lv5_0);
    shl_ln1273_182_fu_4736_p3 <= (p_read1623_reg_5135 & ap_const_lv1_0);
    shl_ln1273_s_fu_4836_p3 <= (p_read515_reg_5183_pp0_iter1_reg & ap_const_lv6_0);
    shl_ln818_208_fu_4897_p3 <= (p_read1522_reg_5142_pp0_iter1_reg & ap_const_lv7_0);
    shl_ln818_209_fu_4904_p3 <= (p_read1522_reg_5142_pp0_iter1_reg & ap_const_lv3_0);
    shl_ln818_s_fu_4515_p3 <= (p_read817_reg_5171 & ap_const_lv5_0);
    sub_ln818_67_fu_4915_p2 <= std_logic_vector(unsigned(shl_ln818_208_fu_4897_p3) - unsigned(zext_ln818_368_fu_4911_p1));
    sub_ln818_fu_4526_p2 <= std_logic_vector(unsigned(zext_ln818_366_fu_4522_p1) - unsigned(zext_ln818_365_fu_4511_p1));
    trunc_ln1273_20_fu_4455_p4 <= mul_ln818_190_fu_225_p2(13 downto 5);
    trunc_ln1273_s_fu_4921_p4 <= sub_ln818_67_fu_4915_p2(15 downto 5);
    trunc_ln818_345_fu_4864_p4 <= r_V_304_fu_4858_p2(15 downto 5);
    trunc_ln818_349_fu_4583_p4 <= r_V_307_fu_236_p2(15 downto 5);
    trunc_ln818_350_fu_4629_p4 <= r_V_308_fu_4623_p2(14 downto 5);
    trunc_ln818_351_fu_4643_p4 <= r_V_309_fu_267_p2(14 downto 5);
    trunc_ln818_352_fu_4662_p4 <= r_V_310_fu_217_p2(14 downto 5);
    trunc_ln818_354_fu_4690_p4 <= r_V_311_fu_220_p2(15 downto 5);
    trunc_ln818_355_fu_4708_p4 <= r_V_312_fu_279_p2(16 downto 5);
    trunc_ln818_356_fu_4753_p4 <= r_V_313_fu_4747_p2(14 downto 5);
    trunc_ln818_357_fu_4942_p4 <= r_V_314_fu_218_p2(15 downto 5);
    zext_ln1273_339_fu_4843_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1273_s_fu_4836_p3),16));
    zext_ln1273_340_fu_4854_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1273_177_fu_4847_p3),16));
    zext_ln1273_341_fu_4884_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1273_108_fu_4881_p1),13));
    zext_ln1273_342_fu_4559_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1273_178_fu_4552_p3),15));
    zext_ln1273_345_fu_4608_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1273_179_fu_4601_p3),15));
    zext_ln1273_346_fu_4619_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1273_180_fu_4612_p3),15));
    zext_ln1273_347_fu_4657_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_read1320_reg_5154),15));
    zext_ln1273_349_fu_4931_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln1273_s_fu_4921_p4),14));
    zext_ln1273_351_fu_4722_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_read1623_reg_5135),11));
    zext_ln1273_352_fu_4732_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1273_181_fu_4725_p3),15));
    zext_ln1273_353_fu_4743_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1273_182_fu_4736_p3),15));
    zext_ln813_138_fu_5008_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln813_670_reg_5256),12));
    zext_ln813_139_fu_5068_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln813_680_fu_5062_p2),13));
    zext_ln813_50_fu_4817_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln813_678_fu_4811_p2),11));
    zext_ln813_51_fu_5059_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln813_679_reg_5271),12));
    zext_ln813_fu_4956_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln813_reg_5246),12));
    zext_ln818_365_fu_4511_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_read817_reg_5171),15));
    zext_ln818_366_fu_4522_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln818_s_fu_4515_p3),15));
    zext_ln818_367_fu_4894_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln818_353_reg_5236),12));
    zext_ln818_368_fu_4911_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln818_209_fu_4904_p3),16));
    zext_ln818_fu_4412_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_read11_reg_5205),10));
end behav;
