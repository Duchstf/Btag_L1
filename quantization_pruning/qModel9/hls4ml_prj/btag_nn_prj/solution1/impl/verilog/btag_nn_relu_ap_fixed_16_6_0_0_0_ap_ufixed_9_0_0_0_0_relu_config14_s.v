// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module btag_nn_relu_ap_fixed_16_6_0_0_0_ap_ufixed_9_0_0_0_0_relu_config14_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        p_read,
        p_read1,
        p_read2,
        ap_return_0,
        ap_return_1,
        ap_return_2
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [15:0] p_read;
input  [15:0] p_read1;
input  [15:0] p_read2;
output  [8:0] ap_return_0;
output  [8:0] ap_return_1;
output  [8:0] ap_return_2;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[8:0] ap_return_0;
reg[8:0] ap_return_1;
reg[8:0] ap_return_2;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
reg    ap_done_reg;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln1649_fu_64_p2;
reg   [0:0] icmp_ln1649_reg_376;
reg    ap_block_pp0_stage0_11001;
wire   [8:0] select_ln302_fu_148_p3;
reg   [8:0] select_ln302_reg_381;
wire   [0:0] icmp_ln1649_229_fu_156_p2;
reg   [0:0] icmp_ln1649_229_reg_386;
wire   [8:0] select_ln302_229_fu_240_p3;
reg   [8:0] select_ln302_229_reg_391;
wire   [0:0] icmp_ln1649_230_fu_248_p2;
reg   [0:0] icmp_ln1649_230_reg_396;
wire   [8:0] select_ln302_230_fu_332_p3;
reg   [8:0] select_ln302_230_reg_401;
wire    ap_block_pp0_stage0;
wire   [0:0] trunc_ln823_fu_80_p1;
wire   [8:0] p_Val2_s_fu_70_p4;
wire   [8:0] zext_ln377_fu_92_p1;
wire   [5:0] tmp7_fu_102_p4;
wire   [8:0] p_Val2_459_fu_96_p2;
wire   [0:0] tmp_fu_124_p3;
wire   [0:0] Range1_all_zeros_fu_118_p2;
wire   [0:0] Range1_all_ones_fu_112_p2;
wire   [0:0] p_Result_s_fu_84_p3;
wire   [0:0] select_ln888_fu_132_p3;
wire   [0:0] deleted_zeros_fu_140_p3;
wire   [0:0] trunc_ln823_229_fu_172_p1;
wire   [8:0] p_Val2_460_fu_162_p4;
wire   [8:0] zext_ln377_229_fu_184_p1;
wire   [5:0] tmp_12_fu_194_p4;
wire   [8:0] p_Val2_461_fu_188_p2;
wire   [0:0] tmp_491_fu_216_p3;
wire   [0:0] Range1_all_zeros_229_fu_210_p2;
wire   [0:0] Range1_all_ones_229_fu_204_p2;
wire   [0:0] p_Result_229_fu_176_p3;
wire   [0:0] select_ln888_229_fu_224_p3;
wire   [0:0] deleted_zeros_229_fu_232_p3;
wire   [0:0] trunc_ln823_230_fu_264_p1;
wire   [8:0] p_Val2_462_fu_254_p4;
wire   [8:0] zext_ln377_230_fu_276_p1;
wire   [5:0] tmp_s_fu_286_p4;
wire   [8:0] p_Val2_463_fu_280_p2;
wire   [0:0] tmp_493_fu_308_p3;
wire   [0:0] Range1_all_zeros_230_fu_302_p2;
wire   [0:0] Range1_all_ones_230_fu_296_p2;
wire   [0:0] p_Result_230_fu_268_p3;
wire   [0:0] select_ln888_230_fu_316_p3;
wire   [0:0] deleted_zeros_230_fu_324_p3;
wire   [8:0] select_ln1649_fu_340_p3;
wire   [8:0] select_ln1649_229_fu_346_p3;
wire   [8:0] select_ln1649_230_fu_352_p3;
reg   [8:0] ap_return_0_preg;
reg   [8:0] ap_return_1_preg;
reg   [8:0] ap_return_2_preg;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to0;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_return_0_preg = 9'd0;
#0 ap_return_1_preg = 9'd0;
#0 ap_return_2_preg = 9'd0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_0_preg <= 9'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_return_0_preg <= select_ln1649_fu_340_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_1_preg <= 9'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_return_1_preg <= select_ln1649_229_fu_346_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_2_preg <= 9'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_return_2_preg <= select_ln1649_230_fu_352_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln1649_229_reg_386 <= icmp_ln1649_229_fu_156_p2;
        icmp_ln1649_230_reg_396 <= icmp_ln1649_230_fu_248_p2;
        icmp_ln1649_reg_376 <= icmp_ln1649_fu_64_p2;
        select_ln302_229_reg_391 <= select_ln302_229_fu_240_p3;
        select_ln302_230_reg_401 <= select_ln302_230_fu_332_p3;
        select_ln302_reg_381 <= select_ln302_fu_148_p3;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to0 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_return_0 = select_ln1649_fu_340_p3;
    end else begin
        ap_return_0 = ap_return_0_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_return_1 = select_ln1649_229_fu_346_p3;
    end else begin
        ap_return_1 = ap_return_1_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_return_2 = select_ln1649_230_fu_352_p3;
    end else begin
        ap_return_2 = ap_return_2_preg;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Range1_all_ones_229_fu_204_p2 = ((tmp_12_fu_194_p4 == 6'd63) ? 1'b1 : 1'b0);

assign Range1_all_ones_230_fu_296_p2 = ((tmp_s_fu_286_p4 == 6'd63) ? 1'b1 : 1'b0);

assign Range1_all_ones_fu_112_p2 = ((tmp7_fu_102_p4 == 6'd63) ? 1'b1 : 1'b0);

assign Range1_all_zeros_229_fu_210_p2 = ((tmp_12_fu_194_p4 == 6'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_230_fu_302_p2 = ((tmp_s_fu_286_p4 == 6'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_fu_118_p2 = ((tmp7_fu_102_p4 == 6'd0) ? 1'b1 : 1'b0);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_done_reg == 1'b1) & (ap_start == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_done_reg == 1'b1) & (ap_start == 1'b1)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_done_reg == 1'b1);
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign deleted_zeros_229_fu_232_p3 = ((p_Result_229_fu_176_p3[0:0] == 1'b1) ? select_ln888_229_fu_224_p3 : Range1_all_zeros_229_fu_210_p2);

assign deleted_zeros_230_fu_324_p3 = ((p_Result_230_fu_268_p3[0:0] == 1'b1) ? select_ln888_230_fu_316_p3 : Range1_all_zeros_230_fu_302_p2);

assign deleted_zeros_fu_140_p3 = ((p_Result_s_fu_84_p3[0:0] == 1'b1) ? select_ln888_fu_132_p3 : Range1_all_zeros_fu_118_p2);

assign icmp_ln1649_229_fu_156_p2 = (($signed(p_read1) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1649_230_fu_248_p2 = (($signed(p_read2) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1649_fu_64_p2 = (($signed(p_read) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign p_Result_229_fu_176_p3 = p_read1[32'd9];

assign p_Result_230_fu_268_p3 = p_read2[32'd9];

assign p_Result_s_fu_84_p3 = p_read[32'd9];

assign p_Val2_459_fu_96_p2 = (p_Val2_s_fu_70_p4 + zext_ln377_fu_92_p1);

assign p_Val2_460_fu_162_p4 = {{p_read1[9:1]}};

assign p_Val2_461_fu_188_p2 = (p_Val2_460_fu_162_p4 + zext_ln377_229_fu_184_p1);

assign p_Val2_462_fu_254_p4 = {{p_read2[9:1]}};

assign p_Val2_463_fu_280_p2 = (p_Val2_462_fu_254_p4 + zext_ln377_230_fu_276_p1);

assign p_Val2_s_fu_70_p4 = {{p_read[9:1]}};

assign select_ln1649_229_fu_346_p3 = ((icmp_ln1649_229_reg_386[0:0] == 1'b1) ? select_ln302_229_reg_391 : 9'd0);

assign select_ln1649_230_fu_352_p3 = ((icmp_ln1649_230_reg_396[0:0] == 1'b1) ? select_ln302_230_reg_401 : 9'd0);

assign select_ln1649_fu_340_p3 = ((icmp_ln1649_reg_376[0:0] == 1'b1) ? select_ln302_reg_381 : 9'd0);

assign select_ln302_229_fu_240_p3 = ((deleted_zeros_229_fu_232_p3[0:0] == 1'b1) ? p_Val2_461_fu_188_p2 : 9'd511);

assign select_ln302_230_fu_332_p3 = ((deleted_zeros_230_fu_324_p3[0:0] == 1'b1) ? p_Val2_463_fu_280_p2 : 9'd511);

assign select_ln302_fu_148_p3 = ((deleted_zeros_fu_140_p3[0:0] == 1'b1) ? p_Val2_459_fu_96_p2 : 9'd511);

assign select_ln888_229_fu_224_p3 = ((tmp_491_fu_216_p3[0:0] == 1'b1) ? Range1_all_zeros_229_fu_210_p2 : Range1_all_ones_229_fu_204_p2);

assign select_ln888_230_fu_316_p3 = ((tmp_493_fu_308_p3[0:0] == 1'b1) ? Range1_all_zeros_230_fu_302_p2 : Range1_all_ones_230_fu_296_p2);

assign select_ln888_fu_132_p3 = ((tmp_fu_124_p3[0:0] == 1'b1) ? Range1_all_zeros_fu_118_p2 : Range1_all_ones_fu_112_p2);

assign tmp7_fu_102_p4 = {{p_read[15:10]}};

assign tmp_12_fu_194_p4 = {{p_read1[15:10]}};

assign tmp_491_fu_216_p3 = p_Val2_461_fu_188_p2[32'd8];

assign tmp_493_fu_308_p3 = p_Val2_463_fu_280_p2[32'd8];

assign tmp_fu_124_p3 = p_Val2_459_fu_96_p2[32'd8];

assign tmp_s_fu_286_p4 = {{p_read2[15:10]}};

assign trunc_ln823_229_fu_172_p1 = p_read1[0:0];

assign trunc_ln823_230_fu_264_p1 = p_read2[0:0];

assign trunc_ln823_fu_80_p1 = p_read[0:0];

assign zext_ln377_229_fu_184_p1 = trunc_ln823_229_fu_172_p1;

assign zext_ln377_230_fu_276_p1 = trunc_ln823_230_fu_264_p1;

assign zext_ln377_fu_92_p1 = trunc_ln823_fu_80_p1;

endmodule //btag_nn_relu_ap_fixed_16_6_0_0_0_ap_ufixed_9_0_0_0_0_relu_config14_s
